@page "/zaznam/{id:int}"
@inject BirdApiClient BAC
@inject NavigationManager NavigationManager

<h3>Detail z√°znamu</h3>

@if (isLoading)
{
    <p>Naƒç√≠t√°m...</p>
}
else if (record is null)
{
    <div class="alert alert-danger">
        Z√°znam s t√≠mto ID se nepoda≈ôilo naj√≠t.
    </div>
}
else
{
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">
                üëÄ Pozorov√°n√≠ pt√°ƒçka: <strong>@record.Bird?.BinomicName</strong>
            </h5>
            <h6 class="card-subtitle mb-2 text-muted">
                üë§ @record.Watcher?.FirstName @record.Watcher?.LastName ‚Äî @record.DateSeen.ToString("dd.MM.yyyy HH:mm")
            </h6>

            <dl class="row">
                <dt class="col-sm-3">Poƒçet jedinc≈Ø</dt>
                <dd class="col-sm-9">@record.Count</dd>

                <dt class="col-sm-3">Poloha</dt>
                <dd class="col-sm-9">@record.Latitude.ToString("0.000000"), @record.Longitude.ToString("0.000000")</dd>

                @if (record.Accuracy > 0)
                {
                    <dt class="col-sm-3">P≈ôesnost</dt>
                    <dd class="col-sm-9">¬± @record.Accuracy.ToString("0.0") m</dd>
                }

                @if (!string.IsNullOrWhiteSpace(record.LocationDescribed))
                {
                    <dt class="col-sm-3">Popis m√≠sta</dt>
                    <dd class="col-sm-9">@record.LocationDescribed</dd>
                }

                @if (!string.IsNullOrWhiteSpace(record.Comment))
                {
                    <dt class="col-sm-3">Pozn√°mka</dt>
                    <dd class="col-sm-9">@record.Comment</dd>
                }
            </dl>

            <Button Color="ButtonColor.Primary" To=@($"/zaznam/{id}/upravit") Type="ButtonType.Link">Upravit</Button>
        </div>
    </div>
}
@code {
    [Parameter] public int id { get; set; }

    private RecordDto? record;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            record = await BAC.Record_GetByIdAsync(id);
        }
        catch
        {
            record = null;
        }

        isLoading = false;
    }
}
