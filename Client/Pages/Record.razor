@page "/zaznam/{id:int}"
@inject BirdApiClient BAC
@inject NavigationManager NavigationManager

<h2 class="mb-4">📄 Detail záznamu</h2>

@if (isLoading)
{
    <div class="alert alert-info">🔄 Načítám záznam...</div>
}
else if (record is null)
{
    <div class="alert alert-danger">❌ Záznam s tímto ID nebyl nalezen.</div>
}
else
{
    <div class="card shadow-sm mb-4">
      <div class="card-header ">
              <h5 class="mb-0">👀 @record.Bird?.FullName</h5>
        </div>
        <div class="card-body">
            <p class="text-muted mb-2">
                👤 <strong>@record.Watcher?.FirstName @record.Watcher?.LastName</strong><br />
                📅 @record.DateSeen.ToString("dd.MM.yyyy HH:mm")
            </p>

            <dl class="row mb-0">
                <dt class="col-sm-4">🕊️ Počet jedinců</dt>
                <dd class="col-sm-8">@record.Count</dd>

                <dt class="col-sm-4">📍 Souřadnice</dt>
                <dd class="col-sm-8">
                    @record.Latitude.ToString("0.000000"), @record.Longitude.ToString("0.000000")
                    @if (record.Accuracy > 0)
                    {
                        <span class="text-muted">(±@record.Accuracy.ToString("0.0") m)</span>
                    }
                </dd>

                @if (!string.IsNullOrWhiteSpace(record.LocationDescribed))
                {
                    <dt class="col-sm-4">📌 Popis místa</dt>
                    <dd class="col-sm-8">@record.LocationDescribed</dd>
                }

                @if (!string.IsNullOrWhiteSpace(record.Comment))
                {
                    <dt class="col-sm-4">📝 Poznámka</dt>
                    <dd class="col-sm-8" style="white-space: pre-wrap;">@record.Comment</dd>
                }
            </dl>
        </div>
        <div class="card-footer d-flex justify-content-between">
             <Button Color="ButtonColor.Primary" To="@($"/zaznam/{id}/upravit")" Type="ButtonType.Link">
                ✏️ Upravit záznam
            </Button>
        </div>
    </div>
}

@code {
    [Parameter] public int id { get; set; }

    private RecordDto? record;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            record = await BAC.Record_GetByIdAsync(id);
        }
        catch
        {
            record = null;
        }

        isLoading = false;
    }
}
