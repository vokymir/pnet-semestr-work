@page "/ptackari"
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject BirdApiClient BAC

<PageTitle>Ptáčkaři</PageTitle>

<h1>Watchers</h1>

<Button Type="ButtonType.Link" To="/ptackar/novy" Color="ButtonColor.Primary">Vytvořit ptáčkaře</Button>
<Button Color="ButtonColor.Secondary" @onclick="ShowModal">Přidat existujícího</Button>
<AddWatcherModal @ref="AddModal" OnWatcherAdded="ReloadWatchers" />

<div class="row mt-4">
    @if (W is null || !W.Any())
    {
        <p>Žádní ptáčkaři...</p>
    }
    else
    {
        @foreach (var watcherDto in W ?? Array.Empty<WatcherDto>())
        {
            <div class="col-12 col-sm-6 col-md-4 col-lg-3 mb-4">
                <Card class="h-100">
                    <CardBody>
                        <CardTitle>@watcherDto.FirstName @watcherDto.LastName</CardTitle>
                        <CardText>@watcherDto.PublicIdentifier</CardText>
                        <Button Color="ButtonColor.Primary" To=@($"/ptackar/{watcherDto.PublicIdentifier}/{watcherDto.Id}")
                                Type="ButtonType.Link">Zobrazit</Button>
                    </CardBody>
                </Card>
            </div>
        }
    }
</div>

@code{
    private ICollection<WatcherDto>? W = null;
    private AddWatcherModal? AddModal;

    protected override async Task OnInitializedAsync()
    {
        await ReloadWatchers();
    }

    private async Task ReloadWatchers()
    {
        W = await BAC.Watcher_GetUserWatchersAsync();
        StateHasChanged();
    }

    private async Task ShowModal()
    {
        if (AddModal is not null)
            await AddModal.ShowAsync();
        else
            Console.WriteLine("ajaj");
    }
}
