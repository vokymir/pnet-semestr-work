@page "/ptackar/novy"
@inject BirdApiClient BAC
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject NavigationManager NavManager

<h3>Nový ptáčkař</h3>
<Toasts class="p-3" Messages="messages" Delay="6000" Placement="ToastsPlacement.TopRight" />

<EditForm Model="watcher" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="firstName" class="form-label">Jméno</label>
        <InputText id="firstName" class="form-control" @bind-Value="watcher.FirstName" />
    </div>

    <div class="mb-3">
        <label for="lastName" class="form-label">Příjmení</label>
        <InputText id="lastName" class="form-control" @bind-Value="watcher.LastName" />
    </div>

    <button class="btn btn-primary" type="submit">Vytvořit</button>
</EditForm>

@code {
    private WatcherDto watcher = new();
    private List<ToastMessage> messages = new();

    protected override async Task OnInitializedAsync()
    {
        var user = await LocalStorage.GetItemAsync<UserDto>("userDto");
        if (user is null)
        {
            messages.Add(new ToastMessage
            {
                Type = ToastType.Danger,
                Title = "Chyba",
                Message = "Musíte být přihlášeni pro vytvoření ptáčkaře.",
                HelpText = DateTime.Now.ToString("g"),
                AutoHide = true
            });

            return;
        }

        watcher.MainCuratorId = user.Id;
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await BAC.Watcher_CreateWatcherAsync(watcher);

            messages.Add(new ToastMessage
            {
                Type = ToastType.Success,
                Title = "Hotovo",
                Message = "Ptáčkař úspěšně vytvořen.",
                HelpText = DateTime.Now.ToString("g"),
                AutoHide = true
            });

            NavManager.NavigateTo("/");
        }
        catch (ApiException<ProblemDetails> ex)
        {
            messages.Add(new ToastMessage
            {
                Type = ToastType.Danger,
                Title = "Chyba při vytváření",
                Message = ex.Result?.Detail ?? "Nastala chyba při ukládání.",
                HelpText = DateTime.Now.ToString("g"),
                AutoHide = false
            });
        }
        catch (Exception ex)
        {
            messages.Add(new ToastMessage
            {
                Type = ToastType.Danger,
                Title = "Neočekávaná chyba",
                Message = ex.Message,
                HelpText = DateTime.Now.ToString("g"),
                AutoHide = false
            });
        }
    }
}
